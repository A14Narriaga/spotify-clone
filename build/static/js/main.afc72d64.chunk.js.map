{"version":3,"sources":["Player.tsx","Search.tsx","App.tsx","index.tsx"],"names":["Player","src","artist","song","useAudio","autoPlay","audio","state","controls","JSON","stringify","onClick","pause","play","volume","Search","queryRef","useRef","document","createElement","useState","songs","setSongs","id","name","artistName","previewURL","currentSong","setCurrentSong","search","a","querySrt","current","value","query","url","fetch","response","json","data","tracks","useEffect","console","log","className","ref","map","App","exact","path","to","ReactDOM","render","StrictMode","getElementById"],"mappings":"6OAuBeA,EArBA,SAAC,GACuC,IADrCC,EACoC,EADpCA,IAAKC,EAC+B,EAD/BA,OAAQC,EACuB,EADvBA,KACuB,EACjBC,YAAS,CACtCH,IAAKA,EACLI,UAAU,IAHoC,mBAC3CC,EAD2C,KACpCC,EADoC,KAC7BC,EAD6B,KAKlD,OACI,gCACKF,EACD,+BAAKJ,EAAL,MAAgBC,KAChB,8BAAMM,KAAKC,UAAUH,EAAO,KAAM,KAClC,wBAAQI,QAASH,EAASI,MAA1B,mBACA,wBAAQD,QAASH,EAASK,KAA1B,kBACA,uBACA,wBAAQF,QAAS,kBAAMH,EAASM,OAAO,KAAvC,yBACA,wBAAQH,QAAS,kBAAMH,EAASM,OAAO,KAAvC,yBACA,wBAAQH,QAAS,kBAAMH,EAASM,OAAO,IAAvC,8BCuCGC,EA/CA,WAEb,IAAMC,EAAWC,iBAAyBC,SAASC,cAAc,UAF9C,EAGOC,mBAAS,IAHhB,mBAGZC,EAHY,KAGLC,EAHK,OAImBF,mBAAe,CACnDG,GAAI,GACJC,KAAM,GACNC,WAAY,GACZC,WAAY,KARK,mBAIZC,EAJY,KAICC,EAJD,KAWbC,EAAM,uCAAG,oCAAAC,EAAA,6DACbR,EAAS,IACHS,EAAWf,EAASgB,QAAQC,MAClB,0BACJ,0DACNC,EALO,gBAKUH,GACjBI,EAHU,0BAGG,+BAFP,0DAEO,YAAkCD,GANxC,SAOUE,MAAMD,GAPhB,cAOPE,EAPO,iBAQMA,EAASC,OARf,QAQPA,EARO,OASbhB,EAASgB,EAAKT,OAAOU,KAAKC,QAC1BxB,EAASgB,QAAQC,MAAQ,GAVZ,4CAAH,qDAiBZ,OAJAQ,qBAAU,WACRC,QAAQC,IAAItB,KACX,CAACA,IAGF,sBAAKuB,UAAU,MAAf,UACE,uBAAOC,IAAK7B,IACZ,wBAAQL,QAASkB,EAAjB,oBACCR,EAAMyB,KAAI,SAAC3C,GAAD,OACT,gCACE,+BAAKA,EAAKsB,WAAV,MAAyBtB,EAAKqB,QAC9B,wBAAQb,QAAS,kBAAMiB,EAAezB,IAAtC,sBAFQA,EAAKoB,OAKjB,cAAC,EAAD,CACItB,IAAK0B,EAAYD,WACjBxB,OAAQyB,EAAYF,WACpBtB,KAAMwB,EAAYH,W,eCzBbuB,EAjBH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,IAAD,CAAMC,GAAG,UAAT,oBACA,qDAEF,eAAC,IAAD,CAAOD,KAAK,UAAZ,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,gBACA,cAAC,EAAD,aCfVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASoC,eAAe,W","file":"static/js/main.afc72d64.chunk.js","sourcesContent":["import { useAudio } from \"react-use\"\r\n\r\nconst Player = ({ src, artist, song }:\r\n    { src: string, artist: string, song: string }) => {\r\n    const [audio, state, controls] = useAudio({\r\n        src: src,\r\n        autoPlay: true,\r\n    });\r\n    return (\r\n        <div>\r\n            {audio}\r\n            <h2>{artist} - {song}</h2>\r\n            <pre>{JSON.stringify(state, null, 2)}</pre>\r\n            <button onClick={controls.pause}>Pause</button>\r\n            <button onClick={controls.play}>Play</button>\r\n            <br />\r\n            <button onClick={() => controls.volume(.1)}>Volume: 10%</button>\r\n            <button onClick={() => controls.volume(.5)}>Volume: 50%</button>\r\n            <button onClick={() => controls.volume(1)}>Volume: 100%</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import { useState, useRef, useEffect } from \"react\"\r\nimport Player from \"./Player\"\r\n\r\ninterface Song {\r\n  id: string\r\n  name: string\r\n  artistName: string\r\n  previewURL: string\r\n}\r\n\r\nconst Search = () => {\r\n\r\n  const queryRef = useRef<HTMLInputElement>(document.createElement(\"input\"))\r\n  const [songs, setSongs] = useState([])\r\n  const [currentSong, setCurrentSong] = useState<Song>({\r\n    id: \"\",\r\n    name: \"\",\r\n    artistName: \"\",\r\n    previewURL: \"\"\r\n  })\r\n\r\n  const search = async () => {\r\n    setSongs([])\r\n    const querySrt = queryRef.current.value\r\n    const baseUrl = \"https://api.napster.com\"\r\n    const key = \"apikey=ZTk2YjY4MjMtMDAzYy00MTg4LWE2MjYtZDIzNjJmMmM0YTdm\"\r\n    const query = `query=${querySrt}`\r\n    const url = baseUrl + `/v2.2/search/verbose?${key}&${query}`\r\n    const response = await fetch(url)\r\n    const json = await response.json()\r\n    setSongs(json.search.data.tracks)\r\n    queryRef.current.value = \"\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(songs)\r\n  }, [songs])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <input ref={queryRef} />\r\n      <button onClick={search}>Search</button>\r\n      {songs.map((song: Song) => (\r\n        <div key={song.id}>\r\n          <h3>{song.artistName} - {song.name}</h3>\r\n          <button onClick={() => setCurrentSong(song)} >â–¶</button>\r\n        </div>\r\n      ))}\r\n      <Player\r\n          src={currentSong.previewURL}\r\n          artist={currentSong.artistName}\r\n          song={currentSong.name}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import \"./App.scss\"\nimport Search from \"./Search\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Link to=\"/search\">Search</Link>\n          <h1>Pagina principal</h1>\n        </Route>\n        <Route path=\"/search\">\n          <Link to=\"/\">Me</Link>\n          <Search />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}